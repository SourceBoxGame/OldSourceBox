#! /usr/bin/env python
# encoding: utf-8

from waflib import Utils
import os

top = '.'
PROJECT_NAME = 'lua'

def options(opt):
	# stub
	return

def configure(conf):
	conf.env.CFLAGS = ["/Z7"]
	conf.env.CXXFLAGS = ["/Z7"]
	return

def build(bld):
	source = ["lzio.c",
			"lvm.c",
			#"lutf8lib.c",
			"lundump.c",
			"ltm.c",
			#"ltablib.c",
			"ltable.c",
			#"lstrlib.c",
			"lstring.c",
			"lstate.c",
			"lparser.c",
			#"loslib.c",
			"lopcodes.c",
			"lobject.c",
			#"loadlib.c",
			"lmem.c",
			#"lmathlib.c",
			"llex.c",
			#"liolib.c",
			"linit.c",
			"lgc.c",
			"lfunc.c",
			"ldump.c",
			"ldo.c",
			"ldebug.c",
			#"ldblib.c",
			"lctype.c",
			#lcorolib.c",
			"lcode.c",
			#"lbaselib.c",
			"lauxlib.c",
			"lapi.c"]
	

	includes = [
		'.',
		'../public',
		'../public/tier0',
		'../public/tier1',
		'../public/qscript',
		'../qscript'
	]
	
	defines = []
	
	if bld.env.DEST_OS != "win32":
		defines += ["LUA_USE_LINUX"]
	else:
		defines += ["LUA_USE_WINDOWS"]

	libs = ['tier0']

	install_path = bld.env.LIBDIR

	bld.stlib(
		source   = source,
		target   = PROJECT_NAME,
		name     = PROJECT_NAME,
		features = 'c',
		includes = includes,
		defines  = defines,
		use      = libs,
		install_path = install_path,
		subsystem = bld.env.MSVC_SUBSYSTEM,
		idx      = bld.get_taskgen_count()
	)

